generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model FoodCategory {
  id            Int               @id @default(autoincrement())
  name          String            @unique
  description   String?
  subcategories FoodSubcategory[]
}

model FoodSubcategory {
  id         Int          @id @default(autoincrement())
  name       String
  category   FoodCategory @relation(fields: [categoryId], references: [id])
  categoryId Int
  foods      Food[]

  @@unique([name, categoryId]) // 同一主分類下不能有重複子分類名
}

model Food {
  id            Int             @id @default(autoincrement())
  name          String
  brandName     String? // 為 null 表示通用食物
  subcategory   FoodSubcategory @relation(fields: [subcategoryId], references: [id])
  subcategoryId Int
  dataSource    String? // e.g. "衛福部", "MyFitnessPal", "user_input"
  nutrients     FoodNutrient[]

  @@unique([name, brandName, subcategoryId]) // 食品名稱 + 品牌 + 子分類 不重複
}

model NutrientCategory {
  id            Int                   @id @default(autoincrement())
  name          String                @unique // e.g. "巨量營養素", "維生素"
  subcategories NutrientSubcategory[]
}

model NutrientSubcategory {
  id           Int              @id @default(autoincrement())
  name         String // e.g. "蛋白質", "維生素C"
  unit         String // e.g. "g", "mg", "kcal"
  category     NutrientCategory @relation(fields: [categoryId], references: [id])
  categoryId   Int
  FoodNutrient FoodNutrient[]

  @@unique([name, categoryId]) // 同類別下不能有同名
}

model FoodNutrient {
  id                    Int                 @id @default(autoincrement())
  food                  Food                @relation(fields: [foodId], references: [id])
  foodId                Int
  nutrientSubcategory   NutrientSubcategory @relation(fields: [nutrientSubcategoryId], references: [id])
  nutrientSubcategoryId Int
  valuePer100g          Float // 每 100g 含量

  @@unique([foodId, nutrientSubcategoryId]) // 避免重複記錄
}
