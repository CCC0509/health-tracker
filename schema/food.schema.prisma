//食物主分類(蛋豆魚肉類...)
model FoodCategory {
    id            Int               @id @default(autoincrement())
    name          String            @unique
    description   String?
    subcategories FoodSubcategory[]
    created_at    DateTime          @default(now())
    updated_at    DateTime          @updatedAt
}

//食物副分類(紅肉,白肉...)
model FoodSubcategory {
    id         Int          @id @default(autoincrement())
    name       String
    category   FoodCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
    categoryId Int
    foods      Food[] // This now defines the many-to-many relation
    created_at DateTime     @default(now())
    updated_at DateTime     @updatedAt

    @@unique([name, categoryId]) // 同一主分類下不能有重複子分類名
}

//食品名稱
model Food {
    id            Int               @id @default(autoincrement())
    name          String
    subcategories FoodSubcategory[] // Replaced single subcategory with a list for many-to-many
    dataSource    DataSource?
    nutrients     FoodNutrient[]
    Brand         Brand?            @relation(fields: [brandId], references: [id], onDelete: SetNull)
    brandId       Int?
    description   String?
    created_at    DateTime          @default(now())
    updated_at    DateTime          @updatedAt

    @@unique([name, brandId]) // Updated unique constraint
    @@index([name]) // 增加名稱索引以優化搜尋
}

//品牌管理獨立出來
model Brand {
    id         Int      @id @default(autoincrement())
    name       String   @unique
    foods      Food[]
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
}

